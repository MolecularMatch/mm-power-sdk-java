/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Address
 */


public class Address {
  @SerializedName("street_name")
  private String streetName = null;

  @SerializedName("street_number")
  private String streetNumber = null;

  @SerializedName("po_box")
  private String poBox = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("sub_division")
  private String subDivision = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("postal_code")
  private String postalCode = null;

  @SerializedName("lat")
  private Float lat = null;

  @SerializedName("lon")
  private Float lon = null;

  public Address streetName(String streetName) {
    this.streetName = streetName;
    return this;
  }

   /**
   * Address street name.
   * @return streetName
  **/
  @Schema(description = "Address street name.")
  public String getStreetName() {
    return streetName;
  }

  public void setStreetName(String streetName) {
    this.streetName = streetName;
  }

  public Address streetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
    return this;
  }

   /**
   * Address street number.
   * @return streetNumber
  **/
  @Schema(description = "Address street number.")
  public String getStreetNumber() {
    return streetNumber;
  }

  public void setStreetNumber(String streetNumber) {
    this.streetNumber = streetNumber;
  }

  public Address poBox(String poBox) {
    this.poBox = poBox;
    return this;
  }

   /**
   * Address P.O. Box.
   * @return poBox
  **/
  @Schema(description = "Address P.O. Box.")
  public String getPoBox() {
    return poBox;
  }

  public void setPoBox(String poBox) {
    this.poBox = poBox;
  }

  public Address city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Address city.
   * @return city
  **/
  @Schema(description = "Address city.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Address subDivision(String subDivision) {
    this.subDivision = subDivision;
    return this;
  }

   /**
   * Address sub division.  Could be a state, province, region, etc.
   * @return subDivision
  **/
  @Schema(description = "Address sub division.  Could be a state, province, region, etc.")
  public String getSubDivision() {
    return subDivision;
  }

  public void setSubDivision(String subDivision) {
    this.subDivision = subDivision;
  }

  public Address country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The ISO-3166 2 character country code.
   * @return country
  **/
  @Schema(required = true, description = "The ISO-3166 2 character country code.")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Address postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Address postal code.
   * @return postalCode
  **/
  @Schema(required = true, description = "Address postal code.")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Address lat(Float lat) {
    this.lat = lat;
    return this;
  }

   /**
   * Latitude
   * @return lat
  **/
  @Schema(description = "Latitude")
  public Float getLat() {
    return lat;
  }

  public void setLat(Float lat) {
    this.lat = lat;
  }

  public Address lon(Float lon) {
    this.lon = lon;
    return this;
  }

   /**
   * Longitude
   * @return lon
  **/
  @Schema(description = "Longitude")
  public Float getLon() {
    return lon;
  }

  public void setLon(Float lon) {
    this.lon = lon;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.streetName, address.streetName) &&
        Objects.equals(this.streetNumber, address.streetNumber) &&
        Objects.equals(this.poBox, address.poBox) &&
        Objects.equals(this.city, address.city) &&
        Objects.equals(this.subDivision, address.subDivision) &&
        Objects.equals(this.country, address.country) &&
        Objects.equals(this.postalCode, address.postalCode) &&
        Objects.equals(this.lat, address.lat) &&
        Objects.equals(this.lon, address.lon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(streetName, streetNumber, poBox, city, subDivision, country, postalCode, lat, lon);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    streetNumber: ").append(toIndentedString(streetNumber)).append("\n");
    sb.append("    poBox: ").append(toIndentedString(poBox)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    subDivision: ").append(toIndentedString(subDivision)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
