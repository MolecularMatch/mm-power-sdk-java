/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Contact
 */


public class Contact {
  @SerializedName("first_name")
  private String firstName = null;

  @SerializedName("middle_name")
  private String middleName = null;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("degrees")
  private String degrees = null;

  @SerializedName("role")
  private String role = null;

  @SerializedName("affiliation")
  private String affiliation = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("phone_ext")
  private String phoneExt = null;

  @SerializedName("email")
  private String email = null;

  public Contact firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of the contact person.
   * @return firstName
  **/
  @Schema(description = "First name of the contact person.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Contact middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Middle name of the contact person.
   * @return middleName
  **/
  @Schema(description = "Middle name of the contact person.")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public Contact lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of the contact person.
   * @return lastName
  **/
  @Schema(required = true, description = "Last name of the contact person.")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Contact degrees(String degrees) {
    this.degrees = degrees;
    return this;
  }

   /**
   * Get degrees
   * @return degrees
  **/
  @Schema(description = "")
  public String getDegrees() {
    return degrees;
  }

  public void setDegrees(String degrees) {
    this.degrees = degrees;
  }

  public Contact role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Position or function of the official.
   * @return role
  **/
  @Schema(description = "Position or function of the official.")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public Contact affiliation(String affiliation) {
    this.affiliation = affiliation;
    return this;
  }

   /**
   * Full name of the official&#x27;s organization.
   * @return affiliation
  **/
  @Schema(description = "Full name of the official's organization.")
  public String getAffiliation() {
    return affiliation;
  }

  public void setAffiliation(String affiliation) {
    this.affiliation = affiliation;
  }

  public Contact phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number of the contact person.
   * @return phone
  **/
  @Schema(description = "Phone number of the contact person.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Contact phoneExt(String phoneExt) {
    this.phoneExt = phoneExt;
    return this;
  }

   /**
   * Phone number extension of the contact person.
   * @return phoneExt
  **/
  @Schema(description = "Phone number extension of the contact person.")
  public String getPhoneExt() {
    return phoneExt;
  }

  public void setPhoneExt(String phoneExt) {
    this.phoneExt = phoneExt;
  }

  public Contact email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Electronic mail address of the contact person.
   * @return email
  **/
  @Schema(description = "Electronic mail address of the contact person.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.firstName, contact.firstName) &&
        Objects.equals(this.middleName, contact.middleName) &&
        Objects.equals(this.lastName, contact.lastName) &&
        Objects.equals(this.degrees, contact.degrees) &&
        Objects.equals(this.role, contact.role) &&
        Objects.equals(this.affiliation, contact.affiliation) &&
        Objects.equals(this.phone, contact.phone) &&
        Objects.equals(this.phoneExt, contact.phoneExt) &&
        Objects.equals(this.email, contact.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, middleName, lastName, degrees, role, affiliation, phone, phoneExt, email);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    degrees: ").append(toIndentedString(degrees)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    affiliation: ").append(toIndentedString(affiliation)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneExt: ").append(toIndentedString(phoneExt)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
