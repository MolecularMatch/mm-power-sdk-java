/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DrugCompositeTags
 */


public class DrugCompositeTags {
  @SerializedName("id")
  private String id = null;

  @SerializedName("term")
  private String term = null;

  @SerializedName("facet")
  private String facet = null;

  /**
   * Gets or Sets filterType
   */
  @JsonAdapter(FilterTypeEnum.Adapter.class)
  public enum FilterTypeEnum {
    INCLUDE("include"),
    EXCLUDE("exclude");

    private String value;

    FilterTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FilterTypeEnum fromValue(String text) {
      for (FilterTypeEnum b : FilterTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FilterTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FilterTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FilterTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FilterTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("filterType")
  private FilterTypeEnum filterType = FilterTypeEnum.INCLUDE;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("suppress")
  private Boolean suppress = null;

  @SerializedName("suppressBoost")
  private Boolean suppressBoost = null;

  @SerializedName("custom")
  private Boolean custom = null;

  /**
   * Gets or Sets manualSuppress
   */
  @JsonAdapter(ManualSuppressEnum.Adapter.class)
  public enum ManualSuppressEnum {
    NUMBER_0(0),
    NUMBER_1(1),
    NUMBER_2(2);

    private Integer value;

    ManualSuppressEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ManualSuppressEnum fromValue(String text) {
      for (ManualSuppressEnum b : ManualSuppressEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ManualSuppressEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ManualSuppressEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ManualSuppressEnum read(final JsonReader jsonReader) throws IOException {
        Integer value = jsonReader.nextInt();
        return ManualSuppressEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("manualSuppress")
  private ManualSuppressEnum manualSuppress = null;

  public DrugCompositeTags id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DrugCompositeTags term(String term) {
    this.term = term;
    return this;
  }

   /**
   * Get term
   * @return term
  **/
  @Schema(required = true, description = "")
  public String getTerm() {
    return term;
  }

  public void setTerm(String term) {
    this.term = term;
  }

  public DrugCompositeTags facet(String facet) {
    this.facet = facet;
    return this;
  }

   /**
   * Get facet
   * @return facet
  **/
  @Schema(required = true, description = "")
  public String getFacet() {
    return facet;
  }

  public void setFacet(String facet) {
    this.facet = facet;
  }

  public DrugCompositeTags filterType(FilterTypeEnum filterType) {
    this.filterType = filterType;
    return this;
  }

   /**
   * Get filterType
   * @return filterType
  **/
  @Schema(description = "")
  public FilterTypeEnum getFilterType() {
    return filterType;
  }

  public void setFilterType(FilterTypeEnum filterType) {
    this.filterType = filterType;
  }

  public DrugCompositeTags priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(required = true, description = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public DrugCompositeTags suppress(Boolean suppress) {
    this.suppress = suppress;
    return this;
  }

   /**
   * Get suppress
   * @return suppress
  **/
  @Schema(description = "")
  public Boolean isSuppress() {
    return suppress;
  }

  public void setSuppress(Boolean suppress) {
    this.suppress = suppress;
  }

  public DrugCompositeTags suppressBoost(Boolean suppressBoost) {
    this.suppressBoost = suppressBoost;
    return this;
  }

   /**
   * Get suppressBoost
   * @return suppressBoost
  **/
  @Schema(description = "")
  public Boolean isSuppressBoost() {
    return suppressBoost;
  }

  public void setSuppressBoost(Boolean suppressBoost) {
    this.suppressBoost = suppressBoost;
  }

  public DrugCompositeTags custom(Boolean custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @Schema(description = "")
  public Boolean isCustom() {
    return custom;
  }

  public void setCustom(Boolean custom) {
    this.custom = custom;
  }

  public DrugCompositeTags manualSuppress(ManualSuppressEnum manualSuppress) {
    this.manualSuppress = manualSuppress;
    return this;
  }

   /**
   * Get manualSuppress
   * @return manualSuppress
  **/
  @Schema(description = "")
  public ManualSuppressEnum getManualSuppress() {
    return manualSuppress;
  }

  public void setManualSuppress(ManualSuppressEnum manualSuppress) {
    this.manualSuppress = manualSuppress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DrugCompositeTags drugCompositeTags = (DrugCompositeTags) o;
    return Objects.equals(this.id, drugCompositeTags.id) &&
        Objects.equals(this.term, drugCompositeTags.term) &&
        Objects.equals(this.facet, drugCompositeTags.facet) &&
        Objects.equals(this.filterType, drugCompositeTags.filterType) &&
        Objects.equals(this.priority, drugCompositeTags.priority) &&
        Objects.equals(this.suppress, drugCompositeTags.suppress) &&
        Objects.equals(this.suppressBoost, drugCompositeTags.suppressBoost) &&
        Objects.equals(this.custom, drugCompositeTags.custom) &&
        Objects.equals(this.manualSuppress, drugCompositeTags.manualSuppress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, term, facet, filterType, priority, suppress, suppressBoost, custom, manualSuppress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DrugCompositeTags {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    facet: ").append(toIndentedString(facet)).append("\n");
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    suppress: ").append(toIndentedString(suppress)).append("\n");
    sb.append("    suppressBoost: ").append(toIndentedString(suppressBoost)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    manualSuppress: ").append(toIndentedString(manualSuppress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
