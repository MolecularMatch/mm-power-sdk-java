/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DrugPharmacology
 */


public class DrugPharmacology {
  @SerializedName("indication")
  private String indication = null;

  @SerializedName("pharmacodynamics")
  private String pharmacodynamics = null;

  @SerializedName("mechanism_of_action")
  private String mechanismOfAction = null;

  @SerializedName("absorption")
  private String absorption = null;

  @SerializedName("toxicity")
  private String toxicity = null;

  @SerializedName("protein_binding")
  private String proteinBinding = null;

  @SerializedName("metabolism")
  private String metabolism = null;

  @SerializedName("half_life")
  private String halfLife = null;

  @SerializedName("route_of_elimination")
  private String routeOfElimination = null;

  @SerializedName("volume_of_distribution")
  private String volumeOfDistribution = null;

  @SerializedName("clearance")
  private String clearance = null;

  public DrugPharmacology indication(String indication) {
    this.indication = indication;
    return this;
  }

   /**
   * Get indication
   * @return indication
  **/
  @Schema(description = "")
  public String getIndication() {
    return indication;
  }

  public void setIndication(String indication) {
    this.indication = indication;
  }

  public DrugPharmacology pharmacodynamics(String pharmacodynamics) {
    this.pharmacodynamics = pharmacodynamics;
    return this;
  }

   /**
   * Get pharmacodynamics
   * @return pharmacodynamics
  **/
  @Schema(description = "")
  public String getPharmacodynamics() {
    return pharmacodynamics;
  }

  public void setPharmacodynamics(String pharmacodynamics) {
    this.pharmacodynamics = pharmacodynamics;
  }

  public DrugPharmacology mechanismOfAction(String mechanismOfAction) {
    this.mechanismOfAction = mechanismOfAction;
    return this;
  }

   /**
   * Get mechanismOfAction
   * @return mechanismOfAction
  **/
  @Schema(description = "")
  public String getMechanismOfAction() {
    return mechanismOfAction;
  }

  public void setMechanismOfAction(String mechanismOfAction) {
    this.mechanismOfAction = mechanismOfAction;
  }

  public DrugPharmacology absorption(String absorption) {
    this.absorption = absorption;
    return this;
  }

   /**
   * Get absorption
   * @return absorption
  **/
  @Schema(description = "")
  public String getAbsorption() {
    return absorption;
  }

  public void setAbsorption(String absorption) {
    this.absorption = absorption;
  }

  public DrugPharmacology toxicity(String toxicity) {
    this.toxicity = toxicity;
    return this;
  }

   /**
   * Get toxicity
   * @return toxicity
  **/
  @Schema(description = "")
  public String getToxicity() {
    return toxicity;
  }

  public void setToxicity(String toxicity) {
    this.toxicity = toxicity;
  }

  public DrugPharmacology proteinBinding(String proteinBinding) {
    this.proteinBinding = proteinBinding;
    return this;
  }

   /**
   * Get proteinBinding
   * @return proteinBinding
  **/
  @Schema(description = "")
  public String getProteinBinding() {
    return proteinBinding;
  }

  public void setProteinBinding(String proteinBinding) {
    this.proteinBinding = proteinBinding;
  }

  public DrugPharmacology metabolism(String metabolism) {
    this.metabolism = metabolism;
    return this;
  }

   /**
   * Get metabolism
   * @return metabolism
  **/
  @Schema(description = "")
  public String getMetabolism() {
    return metabolism;
  }

  public void setMetabolism(String metabolism) {
    this.metabolism = metabolism;
  }

  public DrugPharmacology halfLife(String halfLife) {
    this.halfLife = halfLife;
    return this;
  }

   /**
   * Get halfLife
   * @return halfLife
  **/
  @Schema(description = "")
  public String getHalfLife() {
    return halfLife;
  }

  public void setHalfLife(String halfLife) {
    this.halfLife = halfLife;
  }

  public DrugPharmacology routeOfElimination(String routeOfElimination) {
    this.routeOfElimination = routeOfElimination;
    return this;
  }

   /**
   * Get routeOfElimination
   * @return routeOfElimination
  **/
  @Schema(description = "")
  public String getRouteOfElimination() {
    return routeOfElimination;
  }

  public void setRouteOfElimination(String routeOfElimination) {
    this.routeOfElimination = routeOfElimination;
  }

  public DrugPharmacology volumeOfDistribution(String volumeOfDistribution) {
    this.volumeOfDistribution = volumeOfDistribution;
    return this;
  }

   /**
   * Get volumeOfDistribution
   * @return volumeOfDistribution
  **/
  @Schema(description = "")
  public String getVolumeOfDistribution() {
    return volumeOfDistribution;
  }

  public void setVolumeOfDistribution(String volumeOfDistribution) {
    this.volumeOfDistribution = volumeOfDistribution;
  }

  public DrugPharmacology clearance(String clearance) {
    this.clearance = clearance;
    return this;
  }

   /**
   * Get clearance
   * @return clearance
  **/
  @Schema(description = "")
  public String getClearance() {
    return clearance;
  }

  public void setClearance(String clearance) {
    this.clearance = clearance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DrugPharmacology drugPharmacology = (DrugPharmacology) o;
    return Objects.equals(this.indication, drugPharmacology.indication) &&
        Objects.equals(this.pharmacodynamics, drugPharmacology.pharmacodynamics) &&
        Objects.equals(this.mechanismOfAction, drugPharmacology.mechanismOfAction) &&
        Objects.equals(this.absorption, drugPharmacology.absorption) &&
        Objects.equals(this.toxicity, drugPharmacology.toxicity) &&
        Objects.equals(this.proteinBinding, drugPharmacology.proteinBinding) &&
        Objects.equals(this.metabolism, drugPharmacology.metabolism) &&
        Objects.equals(this.halfLife, drugPharmacology.halfLife) &&
        Objects.equals(this.routeOfElimination, drugPharmacology.routeOfElimination) &&
        Objects.equals(this.volumeOfDistribution, drugPharmacology.volumeOfDistribution) &&
        Objects.equals(this.clearance, drugPharmacology.clearance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(indication, pharmacodynamics, mechanismOfAction, absorption, toxicity, proteinBinding, metabolism, halfLife, routeOfElimination, volumeOfDistribution, clearance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DrugPharmacology {\n");
    
    sb.append("    indication: ").append(toIndentedString(indication)).append("\n");
    sb.append("    pharmacodynamics: ").append(toIndentedString(pharmacodynamics)).append("\n");
    sb.append("    mechanismOfAction: ").append(toIndentedString(mechanismOfAction)).append("\n");
    sb.append("    absorption: ").append(toIndentedString(absorption)).append("\n");
    sb.append("    toxicity: ").append(toIndentedString(toxicity)).append("\n");
    sb.append("    proteinBinding: ").append(toIndentedString(proteinBinding)).append("\n");
    sb.append("    metabolism: ").append(toIndentedString(metabolism)).append("\n");
    sb.append("    halfLife: ").append(toIndentedString(halfLife)).append("\n");
    sb.append("    routeOfElimination: ").append(toIndentedString(routeOfElimination)).append("\n");
    sb.append("    volumeOfDistribution: ").append(toIndentedString(volumeOfDistribution)).append("\n");
    sb.append("    clearance: ").append(toIndentedString(clearance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
