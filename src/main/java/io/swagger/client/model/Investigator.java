/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Investigator
 */


public class Investigator {
  @SerializedName("first_name")
  private String firstName = null;

  @SerializedName("middle_name")
  private String middleName = null;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("degrees")
  private String degrees = null;

  /**
   * Position or function of the official.
   */
  @JsonAdapter(RoleEnum.Adapter.class)
  public enum RoleEnum {
    PRINCIPAL_INVESTIGATOR("Principal Investigator"),
    SUB_INVESTIGATOR("Sub-Investigator"),
    STUDY_CHAIR("Study Chair"),
    STUDY_DIRECTOR("Study Director");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RoleEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("role")
  private RoleEnum role = null;

  @SerializedName("affiliation")
  private String affiliation = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("phone_ext")
  private String phoneExt = null;

  @SerializedName("email")
  private String email = null;

  public Investigator firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of the investigator.
   * @return firstName
  **/
  @Schema(description = "First name of the investigator.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Investigator middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Middle name of the investigator.
   * @return middleName
  **/
  @Schema(description = "Middle name of the investigator.")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public Investigator lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of the investigator.
   * @return lastName
  **/
  @Schema(required = true, description = "Last name of the investigator.")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Investigator degrees(String degrees) {
    this.degrees = degrees;
    return this;
  }

   /**
   * Degress earned by the investigator.
   * @return degrees
  **/
  @Schema(description = "Degress earned by the investigator.")
  public String getDegrees() {
    return degrees;
  }

  public void setDegrees(String degrees) {
    this.degrees = degrees;
  }

  public Investigator role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * Position or function of the official.
   * @return role
  **/
  @Schema(description = "Position or function of the official.")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public Investigator affiliation(String affiliation) {
    this.affiliation = affiliation;
    return this;
  }

   /**
   * Full name of the official&#x27;s organization.
   * @return affiliation
  **/
  @Schema(description = "Full name of the official's organization.")
  public String getAffiliation() {
    return affiliation;
  }

  public void setAffiliation(String affiliation) {
    this.affiliation = affiliation;
  }

  public Investigator phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number of the investigator.
   * @return phone
  **/
  @Schema(description = "Phone number of the investigator.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Investigator phoneExt(String phoneExt) {
    this.phoneExt = phoneExt;
    return this;
  }

   /**
   * Phone number extension of the investigator.
   * @return phoneExt
  **/
  @Schema(description = "Phone number extension of the investigator.")
  public String getPhoneExt() {
    return phoneExt;
  }

  public void setPhoneExt(String phoneExt) {
    this.phoneExt = phoneExt;
  }

  public Investigator email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Electronic mail address of the investigator.
   * @return email
  **/
  @Schema(description = "Electronic mail address of the investigator.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Investigator investigator = (Investigator) o;
    return Objects.equals(this.firstName, investigator.firstName) &&
        Objects.equals(this.middleName, investigator.middleName) &&
        Objects.equals(this.lastName, investigator.lastName) &&
        Objects.equals(this.degrees, investigator.degrees) &&
        Objects.equals(this.role, investigator.role) &&
        Objects.equals(this.affiliation, investigator.affiliation) &&
        Objects.equals(this.phone, investigator.phone) &&
        Objects.equals(this.phoneExt, investigator.phoneExt) &&
        Objects.equals(this.email, investigator.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, middleName, lastName, degrees, role, affiliation, phone, phoneExt, email);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Investigator {\n");
    
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    degrees: ").append(toIndentedString(degrees)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    affiliation: ").append(toIndentedString(affiliation)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneExt: ").append(toIndentedString(phoneExt)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
