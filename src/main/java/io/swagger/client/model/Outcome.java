/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Outcome
 */


public class Outcome {
  @SerializedName("measure")
  private String measure = null;

  @SerializedName("time_frame")
  private String timeFrame = null;

  @SerializedName("description")
  private String description = null;

  public Outcome measure(String measure) {
    this.measure = measure;
    return this;
  }

   /**
   * The physiological or reported measurement used for the outcome.
   * @return measure
  **/
  @Schema(required = true, description = "The physiological or reported measurement used for the outcome.")
  public String getMeasure() {
    return measure;
  }

  public void setMeasure(String measure) {
    this.measure = measure;
  }

  public Outcome timeFrame(String timeFrame) {
    this.timeFrame = timeFrame;
    return this;
  }

   /**
   * Time point(s) at which the measurement is assessed for the specific metric used. The description of the time point(s) of assessment must be specific to the outcome measure and is generally the specific duration of time over which each participant is assessed (not the overall duration of the study).
   * @return timeFrame
  **/
  @Schema(description = "Time point(s) at which the measurement is assessed for the specific metric used. The description of the time point(s) of assessment must be specific to the outcome measure and is generally the specific duration of time over which each participant is assessed (not the overall duration of the study).")
  public String getTimeFrame() {
    return timeFrame;
  }

  public void setTimeFrame(String timeFrame) {
    this.timeFrame = timeFrame;
  }

  public Outcome description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the metric used to characterize the specific primary outcome measure.
   * @return description
  **/
  @Schema(description = "Description of the metric used to characterize the specific primary outcome measure.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Outcome outcome = (Outcome) o;
    return Objects.equals(this.measure, outcome.measure) &&
        Objects.equals(this.timeFrame, outcome.timeFrame) &&
        Objects.equals(this.description, outcome.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(measure, timeFrame, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Outcome {\n");
    
    sb.append("    measure: ").append(toIndentedString(measure)).append("\n");
    sb.append("    timeFrame: ").append(toIndentedString(timeFrame)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
