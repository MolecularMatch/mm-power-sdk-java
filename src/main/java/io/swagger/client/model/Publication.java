/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ConceptAssociation;
import io.swagger.client.model.PublicationAuthors;
import io.swagger.client.model.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
/**
 * Publication
 */


public class Publication {
  @SerializedName("_score")
  private Float _score = null;

  @SerializedName("mboost")
  private Float mboost = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("pmid")
  private String pmid = null;

  @SerializedName("doi")
  private String doi = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("journalName")
  private String journalName = null;

  @SerializedName("journalISOAbbreviation")
  private String journalISOAbbreviation = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("purpose")
  private String purpose = null;

  @SerializedName("background")
  private String background = null;

  @SerializedName("methods")
  private String methods = null;

  @SerializedName("results")
  private String results = null;

  @SerializedName("conclusion")
  private String conclusion = null;

  @SerializedName("conflicts")
  private String conflicts = null;

  @SerializedName("fulltext")
  private String fulltext = null;

  @SerializedName("citation")
  private String citation = null;

  @SerializedName("citation_date")
  private OffsetDateTime citationDate = null;

  @SerializedName("link")
  private String link = null;

  @SerializedName("chemicals")
  private java.util.List<String> chemicals = null;

  @SerializedName("keywords")
  private java.util.List<String> keywords = null;

  @SerializedName("extendedKeywords")
  private java.util.List<String> extendedKeywords = null;

  @SerializedName("publicationType")
  private java.util.List<String> publicationType = null;

  @SerializedName("authors")
  private java.util.List<PublicationAuthors> authors = null;

  @SerializedName("tags")
  private java.util.List<Tag> tags = null;

  @SerializedName("molecularAlterations")
  private java.util.List<ConceptAssociation> molecularAlterations = null;

  public Publication _score(Float _score) {
    this._score = _score;
    return this;
  }

   /**
   * indicator of the quality of the match.
   * @return _score
  **/
  @Schema(description = "indicator of the quality of the match.")
  public Float getScore() {
    return _score;
  }

  public void setScore(Float _score) {
    this._score = _score;
  }

  public Publication mboost(Float mboost) {
    this.mboost = mboost;
    return this;
  }

   /**
   * intrinsic boost to the record.
   * @return mboost
  **/
  @Schema(description = "intrinsic boost to the record.")
  public Float getMboost() {
    return mboost;
  }

  public void setMboost(Float mboost) {
    this.mboost = mboost;
  }

  public Publication id(String id) {
    this.id = id;
    return this;
  }

   /**
   * unique identifier.
   * @return id
  **/
  @Schema(description = "unique identifier.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Publication pmid(String pmid) {
    this.pmid = pmid;
    return this;
  }

   /**
   * PubMed ID.
   * @return pmid
  **/
  @Schema(description = "PubMed ID.")
  public String getPmid() {
    return pmid;
  }

  public void setPmid(String pmid) {
    this.pmid = pmid;
  }

  public Publication doi(String doi) {
    this.doi = doi;
    return this;
  }

   /**
   * Digital Object Identifier (permanent link at doi.org/[doi]).
   * @return doi
  **/
  @Schema(description = "Digital Object Identifier (permanent link at doi.org/[doi]).")
  public String getDoi() {
    return doi;
  }

  public void setDoi(String doi) {
    this.doi = doi;
  }

  public Publication source(String source) {
    this.source = source;
    return this;
  }

   /**
   * data source of this record
   * @return source
  **/
  @Schema(description = "data source of this record")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public Publication journalName(String journalName) {
    this.journalName = journalName;
    return this;
  }

   /**
   * Journal name.
   * @return journalName
  **/
  @Schema(description = "Journal name.")
  public String getJournalName() {
    return journalName;
  }

  public void setJournalName(String journalName) {
    this.journalName = journalName;
  }

  public Publication journalISOAbbreviation(String journalISOAbbreviation) {
    this.journalISOAbbreviation = journalISOAbbreviation;
    return this;
  }

   /**
   * Get journalISOAbbreviation
   * @return journalISOAbbreviation
  **/
  @Schema(description = "")
  public String getJournalISOAbbreviation() {
    return journalISOAbbreviation;
  }

  public void setJournalISOAbbreviation(String journalISOAbbreviation) {
    this.journalISOAbbreviation = journalISOAbbreviation;
  }

  public Publication title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Official title for the publication.
   * @return title
  **/
  @Schema(description = "Official title for the publication.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Publication purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Abstract&#x27;s purpose section.
   * @return purpose
  **/
  @Schema(description = "Abstract's purpose section.")
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  public Publication background(String background) {
    this.background = background;
    return this;
  }

   /**
   * Abstract&#x27;s background section.
   * @return background
  **/
  @Schema(description = "Abstract's background section.")
  public String getBackground() {
    return background;
  }

  public void setBackground(String background) {
    this.background = background;
  }

  public Publication methods(String methods) {
    this.methods = methods;
    return this;
  }

   /**
   * Abstract&#x27;s methods section.
   * @return methods
  **/
  @Schema(description = "Abstract's methods section.")
  public String getMethods() {
    return methods;
  }

  public void setMethods(String methods) {
    this.methods = methods;
  }

  public Publication results(String results) {
    this.results = results;
    return this;
  }

   /**
   * Abstract&#x27;s results section.
   * @return results
  **/
  @Schema(description = "Abstract's results section.")
  public String getResults() {
    return results;
  }

  public void setResults(String results) {
    this.results = results;
  }

  public Publication conclusion(String conclusion) {
    this.conclusion = conclusion;
    return this;
  }

   /**
   * Abstract&#x27;s conclusion section.
   * @return conclusion
  **/
  @Schema(description = "Abstract's conclusion section.")
  public String getConclusion() {
    return conclusion;
  }

  public void setConclusion(String conclusion) {
    this.conclusion = conclusion;
  }

  public Publication conflicts(String conflicts) {
    this.conflicts = conflicts;
    return this;
  }

   /**
   * Author&#x27;s conflicts of interest section.
   * @return conflicts
  **/
  @Schema(description = "Author's conflicts of interest section.")
  public String getConflicts() {
    return conflicts;
  }

  public void setConflicts(String conflicts) {
    this.conflicts = conflicts;
  }

  public Publication fulltext(String fulltext) {
    this.fulltext = fulltext;
    return this;
  }

   /**
   * Full text (if available).
   * @return fulltext
  **/
  @Schema(description = "Full text (if available).")
  public String getFulltext() {
    return fulltext;
  }

  public void setFulltext(String fulltext) {
    this.fulltext = fulltext;
  }

  public Publication citation(String citation) {
    this.citation = citation;
    return this;
  }

   /**
   * MLA formatted citation.
   * @return citation
  **/
  @Schema(description = "MLA formatted citation.")
  public String getCitation() {
    return citation;
  }

  public void setCitation(String citation) {
    this.citation = citation;
  }

  public Publication citationDate(OffsetDateTime citationDate) {
    this.citationDate = citationDate;
    return this;
  }

   /**
   * Article date used for citation
   * @return citationDate
  **/
  @Schema(description = "Article date used for citation")
  public OffsetDateTime getCitationDate() {
    return citationDate;
  }

  public void setCitationDate(OffsetDateTime citationDate) {
    this.citationDate = citationDate;
  }

  public Publication link(String link) {
    this.link = link;
    return this;
  }

   /**
   * Link to original source.
   * @return link
  **/
  @Schema(description = "Link to original source.")
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }

  public Publication chemicals(java.util.List<String> chemicals) {
    this.chemicals = chemicals;
    return this;
  }

  public Publication addChemicalsItem(String chemicalsItem) {
    if (this.chemicals == null) {
      this.chemicals = new java.util.ArrayList<>();
    }
    this.chemicals.add(chemicalsItem);
    return this;
  }

   /**
   * Chemicals or drugs referenced in this publication.
   * @return chemicals
  **/
  @Schema(description = "Chemicals or drugs referenced in this publication.")
  public java.util.List<String> getChemicals() {
    return chemicals;
  }

  public void setChemicals(java.util.List<String> chemicals) {
    this.chemicals = chemicals;
  }

  public Publication keywords(java.util.List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public Publication addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new java.util.ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Get keywords
   * @return keywords
  **/
  @Schema(description = "")
  public java.util.List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(java.util.List<String> keywords) {
    this.keywords = keywords;
  }

  public Publication extendedKeywords(java.util.List<String> extendedKeywords) {
    this.extendedKeywords = extendedKeywords;
    return this;
  }

  public Publication addExtendedKeywordsItem(String extendedKeywordsItem) {
    if (this.extendedKeywords == null) {
      this.extendedKeywords = new java.util.ArrayList<>();
    }
    this.extendedKeywords.add(extendedKeywordsItem);
    return this;
  }

   /**
   * Get extendedKeywords
   * @return extendedKeywords
  **/
  @Schema(description = "")
  public java.util.List<String> getExtendedKeywords() {
    return extendedKeywords;
  }

  public void setExtendedKeywords(java.util.List<String> extendedKeywords) {
    this.extendedKeywords = extendedKeywords;
  }

  public Publication publicationType(java.util.List<String> publicationType) {
    this.publicationType = publicationType;
    return this;
  }

  public Publication addPublicationTypeItem(String publicationTypeItem) {
    if (this.publicationType == null) {
      this.publicationType = new java.util.ArrayList<>();
    }
    this.publicationType.add(publicationTypeItem);
    return this;
  }

   /**
   * Publication types infered by MM.
   * @return publicationType
  **/
  @Schema(description = "Publication types infered by MM.")
  public java.util.List<String> getPublicationType() {
    return publicationType;
  }

  public void setPublicationType(java.util.List<String> publicationType) {
    this.publicationType = publicationType;
  }

  public Publication authors(java.util.List<PublicationAuthors> authors) {
    this.authors = authors;
    return this;
  }

  public Publication addAuthorsItem(PublicationAuthors authorsItem) {
    if (this.authors == null) {
      this.authors = new java.util.ArrayList<>();
    }
    this.authors.add(authorsItem);
    return this;
  }

   /**
   * Get authors
   * @return authors
  **/
  @Schema(description = "")
  public java.util.List<PublicationAuthors> getAuthors() {
    return authors;
  }

  public void setAuthors(java.util.List<PublicationAuthors> authors) {
    this.authors = authors;
  }

  public Publication tags(java.util.List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public Publication addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new java.util.ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Concept associations established for this publication.
   * @return tags
  **/
  @Schema(description = "Concept associations established for this publication.")
  public java.util.List<Tag> getTags() {
    return tags;
  }

  public void setTags(java.util.List<Tag> tags) {
    this.tags = tags;
  }

  public Publication molecularAlterations(java.util.List<ConceptAssociation> molecularAlterations) {
    this.molecularAlterations = molecularAlterations;
    return this;
  }

  public Publication addMolecularAlterationsItem(ConceptAssociation molecularAlterationsItem) {
    if (this.molecularAlterations == null) {
      this.molecularAlterations = new java.util.ArrayList<>();
    }
    this.molecularAlterations.add(molecularAlterationsItem);
    return this;
  }

   /**
   * Molecular concept associations established for this publication.
   * @return molecularAlterations
  **/
  @Schema(description = "Molecular concept associations established for this publication.")
  public java.util.List<ConceptAssociation> getMolecularAlterations() {
    return molecularAlterations;
  }

  public void setMolecularAlterations(java.util.List<ConceptAssociation> molecularAlterations) {
    this.molecularAlterations = molecularAlterations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Publication publication = (Publication) o;
    return Objects.equals(this._score, publication._score) &&
        Objects.equals(this.mboost, publication.mboost) &&
        Objects.equals(this.id, publication.id) &&
        Objects.equals(this.pmid, publication.pmid) &&
        Objects.equals(this.doi, publication.doi) &&
        Objects.equals(this.source, publication.source) &&
        Objects.equals(this.journalName, publication.journalName) &&
        Objects.equals(this.journalISOAbbreviation, publication.journalISOAbbreviation) &&
        Objects.equals(this.title, publication.title) &&
        Objects.equals(this.purpose, publication.purpose) &&
        Objects.equals(this.background, publication.background) &&
        Objects.equals(this.methods, publication.methods) &&
        Objects.equals(this.results, publication.results) &&
        Objects.equals(this.conclusion, publication.conclusion) &&
        Objects.equals(this.conflicts, publication.conflicts) &&
        Objects.equals(this.fulltext, publication.fulltext) &&
        Objects.equals(this.citation, publication.citation) &&
        Objects.equals(this.citationDate, publication.citationDate) &&
        Objects.equals(this.link, publication.link) &&
        Objects.equals(this.chemicals, publication.chemicals) &&
        Objects.equals(this.keywords, publication.keywords) &&
        Objects.equals(this.extendedKeywords, publication.extendedKeywords) &&
        Objects.equals(this.publicationType, publication.publicationType) &&
        Objects.equals(this.authors, publication.authors) &&
        Objects.equals(this.tags, publication.tags) &&
        Objects.equals(this.molecularAlterations, publication.molecularAlterations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_score, mboost, id, pmid, doi, source, journalName, journalISOAbbreviation, title, purpose, background, methods, results, conclusion, conflicts, fulltext, citation, citationDate, link, chemicals, keywords, extendedKeywords, publicationType, authors, tags, molecularAlterations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Publication {\n");
    
    sb.append("    _score: ").append(toIndentedString(_score)).append("\n");
    sb.append("    mboost: ").append(toIndentedString(mboost)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pmid: ").append(toIndentedString(pmid)).append("\n");
    sb.append("    doi: ").append(toIndentedString(doi)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    journalName: ").append(toIndentedString(journalName)).append("\n");
    sb.append("    journalISOAbbreviation: ").append(toIndentedString(journalISOAbbreviation)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    background: ").append(toIndentedString(background)).append("\n");
    sb.append("    methods: ").append(toIndentedString(methods)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    conclusion: ").append(toIndentedString(conclusion)).append("\n");
    sb.append("    conflicts: ").append(toIndentedString(conflicts)).append("\n");
    sb.append("    fulltext: ").append(toIndentedString(fulltext)).append("\n");
    sb.append("    citation: ").append(toIndentedString(citation)).append("\n");
    sb.append("    citationDate: ").append(toIndentedString(citationDate)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    chemicals: ").append(toIndentedString(chemicals)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    extendedKeywords: ").append(toIndentedString(extendedKeywords)).append("\n");
    sb.append("    publicationType: ").append(toIndentedString(publicationType)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    molecularAlterations: ").append(toIndentedString(molecularAlterations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
