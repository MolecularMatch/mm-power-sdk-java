/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ResponsibleParty
 */


public class ResponsibleParty {
  @SerializedName("name_title")
  private String nameTitle = null;

  @SerializedName("organization")
  private String organization = null;

  /**
   * Gets or Sets responsiblePartyType
   */
  @JsonAdapter(ResponsiblePartyTypeEnum.Adapter.class)
  public enum ResponsiblePartyTypeEnum {
    SPONSOR("Sponsor"),
    PRINCIPAL_INVESTIGATOR("Principal Investigator"),
    SPONSOR_INVESTIGATOR("Sponsor-Investigator");

    private String value;

    ResponsiblePartyTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ResponsiblePartyTypeEnum fromValue(String text) {
      for (ResponsiblePartyTypeEnum b : ResponsiblePartyTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ResponsiblePartyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResponsiblePartyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResponsiblePartyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ResponsiblePartyTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("responsible_party_type")
  private ResponsiblePartyTypeEnum responsiblePartyType = ResponsiblePartyTypeEnum.PRINCIPAL_INVESTIGATOR;

  @SerializedName("investigator_affiliation")
  private String investigatorAffiliation = null;

  @SerializedName("investigator_full_name")
  private String investigatorFullName = null;

  @SerializedName("investigator_title")
  private String investigatorTitle = null;

  public ResponsibleParty nameTitle(String nameTitle) {
    this.nameTitle = nameTitle;
    return this;
  }

   /**
   * Get nameTitle
   * @return nameTitle
  **/
  @Schema(description = "")
  public String getNameTitle() {
    return nameTitle;
  }

  public void setNameTitle(String nameTitle) {
    this.nameTitle = nameTitle;
  }

  public ResponsibleParty organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @Schema(description = "")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public ResponsibleParty responsiblePartyType(ResponsiblePartyTypeEnum responsiblePartyType) {
    this.responsiblePartyType = responsiblePartyType;
    return this;
  }

   /**
   * Get responsiblePartyType
   * @return responsiblePartyType
  **/
  @Schema(description = "")
  public ResponsiblePartyTypeEnum getResponsiblePartyType() {
    return responsiblePartyType;
  }

  public void setResponsiblePartyType(ResponsiblePartyTypeEnum responsiblePartyType) {
    this.responsiblePartyType = responsiblePartyType;
  }

  public ResponsibleParty investigatorAffiliation(String investigatorAffiliation) {
    this.investigatorAffiliation = investigatorAffiliation;
    return this;
  }

   /**
   * Get investigatorAffiliation
   * @return investigatorAffiliation
  **/
  @Schema(description = "")
  public String getInvestigatorAffiliation() {
    return investigatorAffiliation;
  }

  public void setInvestigatorAffiliation(String investigatorAffiliation) {
    this.investigatorAffiliation = investigatorAffiliation;
  }

  public ResponsibleParty investigatorFullName(String investigatorFullName) {
    this.investigatorFullName = investigatorFullName;
    return this;
  }

   /**
   * Get investigatorFullName
   * @return investigatorFullName
  **/
  @Schema(description = "")
  public String getInvestigatorFullName() {
    return investigatorFullName;
  }

  public void setInvestigatorFullName(String investigatorFullName) {
    this.investigatorFullName = investigatorFullName;
  }

  public ResponsibleParty investigatorTitle(String investigatorTitle) {
    this.investigatorTitle = investigatorTitle;
    return this;
  }

   /**
   * Get investigatorTitle
   * @return investigatorTitle
  **/
  @Schema(description = "")
  public String getInvestigatorTitle() {
    return investigatorTitle;
  }

  public void setInvestigatorTitle(String investigatorTitle) {
    this.investigatorTitle = investigatorTitle;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponsibleParty responsibleParty = (ResponsibleParty) o;
    return Objects.equals(this.nameTitle, responsibleParty.nameTitle) &&
        Objects.equals(this.organization, responsibleParty.organization) &&
        Objects.equals(this.responsiblePartyType, responsibleParty.responsiblePartyType) &&
        Objects.equals(this.investigatorAffiliation, responsibleParty.investigatorAffiliation) &&
        Objects.equals(this.investigatorFullName, responsibleParty.investigatorFullName) &&
        Objects.equals(this.investigatorTitle, responsibleParty.investigatorTitle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nameTitle, organization, responsiblePartyType, investigatorAffiliation, investigatorFullName, investigatorTitle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponsibleParty {\n");
    
    sb.append("    nameTitle: ").append(toIndentedString(nameTitle)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    responsiblePartyType: ").append(toIndentedString(responsiblePartyType)).append("\n");
    sb.append("    investigatorAffiliation: ").append(toIndentedString(investigatorAffiliation)).append("\n");
    sb.append("    investigatorFullName: ").append(toIndentedString(investigatorFullName)).append("\n");
    sb.append("    investigatorTitle: ").append(toIndentedString(investigatorTitle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
