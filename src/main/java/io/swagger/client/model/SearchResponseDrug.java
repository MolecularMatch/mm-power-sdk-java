/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Filter;
import io.swagger.client.model.SearchResponseDrugRows;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The search response schema.
 */
@Schema(description = "The search response schema.")

public class SearchResponseDrug {
  @SerializedName("searchKey")
  private String searchKey = null;

  @SerializedName("institutionId")
  private String institutionId = null;

  @SerializedName("caseId")
  private String caseId = null;

  @SerializedName("total")
  private Integer total = null;

  @SerializedName("totalPages")
  private Integer totalPages = null;

  @SerializedName("page")
  private Integer page = null;

  @SerializedName("rows")
  private List<SearchResponseDrugRows> rows = null;

  @SerializedName("rationalized")
  private List<Filter> rationalized = null;

  @SerializedName("unrecognized")
  private List<Filter> unrecognized = null;

  @SerializedName("ambiguousNarrative")
  private List<String> ambiguousNarrative = null;

  public SearchResponseDrug searchKey(String searchKey) {
    this.searchKey = searchKey;
    return this;
  }

   /**
   * Search key from a previous response to reconsititute a prior request.
   * @return searchKey
  **/
  @Schema(description = "Search key from a previous response to reconsititute a prior request.")
  public String getSearchKey() {
    return searchKey;
  }

  public void setSearchKey(String searchKey) {
    this.searchKey = searchKey;
  }

  public SearchResponseDrug institutionId(String institutionId) {
    this.institutionId = institutionId;
    return this;
  }

   /**
   * An institution identifier recognized by MolecularMatch to enable institution specific results and location awareness.
   * @return institutionId
  **/
  @Schema(description = "An institution identifier recognized by MolecularMatch to enable institution specific results and location awareness.")
  public String getInstitutionId() {
    return institutionId;
  }

  public void setInstitutionId(String institutionId) {
    this.institutionId = institutionId;
  }

  public SearchResponseDrug caseId(String caseId) {
    this.caseId = caseId;
    return this;
  }

   /**
   * For lab specific case tracking.
   * @return caseId
  **/
  @Schema(description = "For lab specific case tracking.")
  public String getCaseId() {
    return caseId;
  }

  public void setCaseId(String caseId) {
    this.caseId = caseId;
  }

  public SearchResponseDrug total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * The total number of records that match this search.
   * @return total
  **/
  @Schema(required = true, description = "The total number of records that match this search.")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }

  public SearchResponseDrug totalPages(Integer totalPages) {
    this.totalPages = totalPages;
    return this;
  }

   /**
   * The number of results pages for this search based on the limit provided in the request.
   * @return totalPages
  **/
  @Schema(required = true, description = "The number of results pages for this search based on the limit provided in the request.")
  public Integer getTotalPages() {
    return totalPages;
  }

  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }

  public SearchResponseDrug page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * The results page number this response corresponds to.
   * @return page
  **/
  @Schema(required = true, description = "The results page number this response corresponds to.")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public SearchResponseDrug rows(List<SearchResponseDrugRows> rows) {
    this.rows = rows;
    return this;
  }

  public SearchResponseDrug addRowsItem(SearchResponseDrugRows rowsItem) {
    if (this.rows == null) {
      this.rows = new ArrayList<SearchResponseDrugRows>();
    }
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * The array of drugs that match the search criteria.
   * @return rows
  **/
  @Schema(description = "The array of drugs that match the search criteria.")
  public List<SearchResponseDrugRows> getRows() {
    return rows;
  }

  public void setRows(List<SearchResponseDrugRows> rows) {
    this.rows = rows;
  }

  public SearchResponseDrug rationalized(List<Filter> rationalized) {
    this.rationalized = rationalized;
    return this;
  }

  public SearchResponseDrug addRationalizedItem(Filter rationalizedItem) {
    if (this.rationalized == null) {
      this.rationalized = new ArrayList<Filter>();
    }
    this.rationalized.add(rationalizedItem);
    return this;
  }

   /**
   * The array of filters and how they were interpreted by the MolecularMatch search engine.
   * @return rationalized
  **/
  @Schema(description = "The array of filters and how they were interpreted by the MolecularMatch search engine.")
  public List<Filter> getRationalized() {
    return rationalized;
  }

  public void setRationalized(List<Filter> rationalized) {
    this.rationalized = rationalized;
  }

  public SearchResponseDrug unrecognized(List<Filter> unrecognized) {
    this.unrecognized = unrecognized;
    return this;
  }

  public SearchResponseDrug addUnrecognizedItem(Filter unrecognizedItem) {
    if (this.unrecognized == null) {
      this.unrecognized = new ArrayList<Filter>();
    }
    this.unrecognized.add(unrecognizedItem);
    return this;
  }

   /**
   * The array of filters that were not recognized by the MolecularMatch search engine.
   * @return unrecognized
  **/
  @Schema(description = "The array of filters that were not recognized by the MolecularMatch search engine.")
  public List<Filter> getUnrecognized() {
    return unrecognized;
  }

  public void setUnrecognized(List<Filter> unrecognized) {
    this.unrecognized = unrecognized;
  }

  public SearchResponseDrug ambiguousNarrative(List<String> ambiguousNarrative) {
    this.ambiguousNarrative = ambiguousNarrative;
    return this;
  }

  public SearchResponseDrug addAmbiguousNarrativeItem(String ambiguousNarrativeItem) {
    if (this.ambiguousNarrative == null) {
      this.ambiguousNarrative = new ArrayList<String>();
    }
    this.ambiguousNarrative.add(ambiguousNarrativeItem);
    return this;
  }

   /**
   * if true include a human readable ambiguous narrative.  This enables the consumer to activate \&quot;did you mean\&quot; search capability.
   * @return ambiguousNarrative
  **/
  @Schema(description = "if true include a human readable ambiguous narrative.  This enables the consumer to activate \"did you mean\" search capability.")
  public List<String> getAmbiguousNarrative() {
    return ambiguousNarrative;
  }

  public void setAmbiguousNarrative(List<String> ambiguousNarrative) {
    this.ambiguousNarrative = ambiguousNarrative;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResponseDrug searchResponseDrug = (SearchResponseDrug) o;
    return Objects.equals(this.searchKey, searchResponseDrug.searchKey) &&
        Objects.equals(this.institutionId, searchResponseDrug.institutionId) &&
        Objects.equals(this.caseId, searchResponseDrug.caseId) &&
        Objects.equals(this.total, searchResponseDrug.total) &&
        Objects.equals(this.totalPages, searchResponseDrug.totalPages) &&
        Objects.equals(this.page, searchResponseDrug.page) &&
        Objects.equals(this.rows, searchResponseDrug.rows) &&
        Objects.equals(this.rationalized, searchResponseDrug.rationalized) &&
        Objects.equals(this.unrecognized, searchResponseDrug.unrecognized) &&
        Objects.equals(this.ambiguousNarrative, searchResponseDrug.ambiguousNarrative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchKey, institutionId, caseId, total, totalPages, page, rows, rationalized, unrecognized, ambiguousNarrative);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResponseDrug {\n");
    
    sb.append("    searchKey: ").append(toIndentedString(searchKey)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    caseId: ").append(toIndentedString(caseId)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    rationalized: ").append(toIndentedString(rationalized)).append("\n");
    sb.append("    unrecognized: ").append(toIndentedString(unrecognized)).append("\n");
    sb.append("    ambiguousNarrative: ").append(toIndentedString(ambiguousNarrative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
