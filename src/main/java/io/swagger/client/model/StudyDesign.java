/*
 * MolecularMatch MMPower
 * MMPower API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@molecularmatch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * StudyDesign
 */


public class StudyDesign {
  @SerializedName("allocation")
  private String allocation = null;

  @SerializedName("intervention_model")
  private String interventionModel = null;

  @SerializedName("intervention_model_description")
  private String interventionModelDescription = null;

  @SerializedName("primary_purpose")
  private String primaryPurpose = null;

  @SerializedName("observational_model")
  private String observationalModel = null;

  @SerializedName("time_perspective")
  private String timePerspective = null;

  @SerializedName("masking")
  private String masking = null;

  @SerializedName("masking_description")
  private String maskingDescription = null;

  public StudyDesign allocation(String allocation) {
    this.allocation = allocation;
    return this;
  }

   /**
   * Get allocation
   * @return allocation
  **/
  @Schema(description = "")
  public String getAllocation() {
    return allocation;
  }

  public void setAllocation(String allocation) {
    this.allocation = allocation;
  }

  public StudyDesign interventionModel(String interventionModel) {
    this.interventionModel = interventionModel;
    return this;
  }

   /**
   * Get interventionModel
   * @return interventionModel
  **/
  @Schema(description = "")
  public String getInterventionModel() {
    return interventionModel;
  }

  public void setInterventionModel(String interventionModel) {
    this.interventionModel = interventionModel;
  }

  public StudyDesign interventionModelDescription(String interventionModelDescription) {
    this.interventionModelDescription = interventionModelDescription;
    return this;
  }

   /**
   * Get interventionModelDescription
   * @return interventionModelDescription
  **/
  @Schema(description = "")
  public String getInterventionModelDescription() {
    return interventionModelDescription;
  }

  public void setInterventionModelDescription(String interventionModelDescription) {
    this.interventionModelDescription = interventionModelDescription;
  }

  public StudyDesign primaryPurpose(String primaryPurpose) {
    this.primaryPurpose = primaryPurpose;
    return this;
  }

   /**
   * Get primaryPurpose
   * @return primaryPurpose
  **/
  @Schema(description = "")
  public String getPrimaryPurpose() {
    return primaryPurpose;
  }

  public void setPrimaryPurpose(String primaryPurpose) {
    this.primaryPurpose = primaryPurpose;
  }

  public StudyDesign observationalModel(String observationalModel) {
    this.observationalModel = observationalModel;
    return this;
  }

   /**
   * Get observationalModel
   * @return observationalModel
  **/
  @Schema(description = "")
  public String getObservationalModel() {
    return observationalModel;
  }

  public void setObservationalModel(String observationalModel) {
    this.observationalModel = observationalModel;
  }

  public StudyDesign timePerspective(String timePerspective) {
    this.timePerspective = timePerspective;
    return this;
  }

   /**
   * Get timePerspective
   * @return timePerspective
  **/
  @Schema(description = "")
  public String getTimePerspective() {
    return timePerspective;
  }

  public void setTimePerspective(String timePerspective) {
    this.timePerspective = timePerspective;
  }

  public StudyDesign masking(String masking) {
    this.masking = masking;
    return this;
  }

   /**
   * Get masking
   * @return masking
  **/
  @Schema(description = "")
  public String getMasking() {
    return masking;
  }

  public void setMasking(String masking) {
    this.masking = masking;
  }

  public StudyDesign maskingDescription(String maskingDescription) {
    this.maskingDescription = maskingDescription;
    return this;
  }

   /**
   * Get maskingDescription
   * @return maskingDescription
  **/
  @Schema(description = "")
  public String getMaskingDescription() {
    return maskingDescription;
  }

  public void setMaskingDescription(String maskingDescription) {
    this.maskingDescription = maskingDescription;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StudyDesign studyDesign = (StudyDesign) o;
    return Objects.equals(this.allocation, studyDesign.allocation) &&
        Objects.equals(this.interventionModel, studyDesign.interventionModel) &&
        Objects.equals(this.interventionModelDescription, studyDesign.interventionModelDescription) &&
        Objects.equals(this.primaryPurpose, studyDesign.primaryPurpose) &&
        Objects.equals(this.observationalModel, studyDesign.observationalModel) &&
        Objects.equals(this.timePerspective, studyDesign.timePerspective) &&
        Objects.equals(this.masking, studyDesign.masking) &&
        Objects.equals(this.maskingDescription, studyDesign.maskingDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocation, interventionModel, interventionModelDescription, primaryPurpose, observationalModel, timePerspective, masking, maskingDescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StudyDesign {\n");
    
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    interventionModel: ").append(toIndentedString(interventionModel)).append("\n");
    sb.append("    interventionModelDescription: ").append(toIndentedString(interventionModelDescription)).append("\n");
    sb.append("    primaryPurpose: ").append(toIndentedString(primaryPurpose)).append("\n");
    sb.append("    observationalModel: ").append(toIndentedString(observationalModel)).append("\n");
    sb.append("    timePerspective: ").append(toIndentedString(timePerspective)).append("\n");
    sb.append("    masking: ").append(toIndentedString(masking)).append("\n");
    sb.append("    maskingDescription: ").append(toIndentedString(maskingDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
